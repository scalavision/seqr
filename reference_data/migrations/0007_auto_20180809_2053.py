# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-08-09 20:53
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


def delete_existing_records(apps, schema_editor):
    # this is so there's no need to provide a default value for new non-nullable fields
    apps.get_model('reference_data', 'OMIM').objects.all().delete()
    apps.get_model('reference_data', 'dbNSFPGene').objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('reference_data', '0006_auto_20170630_1754'),
    ]

    operations = [
        migrations.DeleteModel(
            name='Clinvar',
        ),
        migrations.DeleteModel(
            name='GencodeRelease',
        ),

        migrations.DeleteModel(
            name='GencodeGene',
        ),
        migrations.DeleteModel(
            name='GencodeTranscript',
        ),
        migrations.RunPython(delete_existing_records),
        migrations.CreateModel(
            name='GeneConstraint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mis_z', models.FloatField()),
                ('mis_z_rank', models.IntegerField()),
                ('pLI', models.FloatField()),
                ('pLI_rank', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='GeneInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gene_id', models.CharField(db_index=True, max_length=20, unique=True)),
                ('gene_symbol', models.TextField(blank=True, null=True)),
                ('chrom_grch37', models.CharField(blank=True, max_length=2, null=True)),
                ('start_grch37', models.IntegerField(blank=True, null=True)),
                ('end_grch37', models.IntegerField(blank=True, null=True)),
                ('strand_grch37', models.CharField(blank=True, max_length=1, null=True)),
                ('coding_region_size_grch37', models.IntegerField(default=0)),
                ('chrom_grch38', models.CharField(blank=True, max_length=2, null=True)),
                ('start_grch38', models.IntegerField(blank=True, null=True)),
                ('end_grch38', models.IntegerField(blank=True, null=True)),
                ('strand_grch38', models.CharField(blank=True, max_length=1, null=True)),
                ('coding_region_size_grch38', models.IntegerField(default=0)),
                ('gencode_gene_type', models.TextField(blank=True, null=True)),
                ('gencode_release', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TranscriptInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transcript_id', models.CharField(db_index=True, max_length=20, unique=True)),
                ('chrom_grch37', models.CharField(blank=True, max_length=2, null=True)),
                ('start_grch37', models.IntegerField(blank=True, null=True)),
                ('end_grch37', models.IntegerField(blank=True, null=True)),
                ('strand_grch37', models.CharField(blank=True, max_length=1, null=True)),
                ('coding_region_size_grch37', models.IntegerField(default=0)),
                ('chrom_grch38', models.CharField(blank=True, max_length=2, null=True)),
                ('start_grch38', models.IntegerField(blank=True, null=True)),
                ('end_grch38', models.IntegerField(blank=True, null=True)),
                ('strand_grch38', models.CharField(blank=True, max_length=1, null=True)),
                ('coding_region_size_grch38', models.IntegerField(default=0)),
                ('gene', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reference_data.GeneInfo')),
            ],
        ),
        migrations.RemoveField(
            model_name='dbnsfpgene',
            name='gene_id',
        ),
        migrations.AddField(
            model_name='dbnsfpgene',
            name='ccds_id',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dbnsfpgene',
            name='refseq_id',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dbnsfpgene',
            name='entrez_gene_id',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dbnsfpgene',
            name='essential_gene',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dbnsfpgene',
            name='expression_egenetics',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dbnsfpgene',
            name='expression_gnf_atlas',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dbnsfpgene',
            name='ghis',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dbnsfpgene',
            name='go_biological_process',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dbnsfpgene',
            name='go_cellular_component',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dbnsfpgene',
            name='go_molecular_function',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dbnsfpgene',
            name='mgi_mouse_gene',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dbnsfpgene',
            name='mgi_mouse_phenotype',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dbnsfpgene',
            name='pathway_biocarta_full',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dbnsfpgene',
            name='pathway_biocarta_short',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dbnsfpgene',
            name='pathway_consensus_path_db',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dbnsfpgene',
            name='pathway_kegg_full',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dbnsfpgene',
            name='pathway_kegg_id',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dbnsfpgene',
            name='pathway_uniprot',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dbnsfpgene',
            name='rvis_exac',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dbnsfpgene',
            name='tissue_specificity',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dbnsfpgene',
            name='trait_association_gwas',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dbnsfpgene',
            name='ucsc_id',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dbnsfpgene',
            name='uniprot_acc',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dbnsfpgene',
            name='uniprot_id',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dbnsfpgene',
            name='zebrafish_gene',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dbnsfpgene',
            name='zebrafish_phenotype_quality',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dbnsfpgene',
            name='zebrafish_phenotype_tag',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dbnsfpgene',
            name='zebrafish_structure',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='omim',
            name='gene_description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.RemoveField(
            model_name='omim',
            name='date_downloaded',
        ),
        migrations.RemoveField(
            model_name='omim',
            name='gene_id',
        ),
        migrations.RemoveField(
            model_name='omim',
            name='gene_symbol',
        ),
        migrations.AddField(
            model_name='omim',
            name='gene',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reference_data.GeneInfo'),
            preserve_default=False,
        ),
        migrations.AlterUniqueTogether(
            name='omim',
            unique_together=set([('mim_number', 'phenotype_mim_number', 'phenotype_description')]),
        ),
        migrations.AddField(
            model_name='geneconstraint',
            name='gene',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reference_data.GeneInfo'),
        ),
        migrations.AddField(
            model_name='dbnsfpgene',
            name='gene',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reference_data.GeneInfo'),
            preserve_default=False,
        ),
    ]
